.popup {

    // POPUP = POPUP background + POPUP content

    // this is for styling the transparant background of the popup
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background-color: rgba($color: $color-black, $alpha: .8);
    // put it on top of everything
    z-index: 9999;

    // hide the popup initially
    opacity: 0;
    visibility: hidden;

    // create popup's background animation
    transition: all .3s;

    // this is the content box of the popup
    &__content {
        @include absCenter;

        width: 75%;
        // height: 50rem; // --> for TESTING porpouses
        background-color: $color-white;
        box-shadow: 0 2rem 4rem rgba($color: $color-black, $alpha: .2);
        border-radius: .3rem;
        // to make the children behave like table cells
        // fake a table instead of using <table> in HTML
        display: table;
        // fix the round borders being covered by img
        // hide everything overflowing the container
        overflow: hidden;

        // hide the popup content initially and reduce its size
        // for creating the animation of the popup going towards the user
        opacity: 0;
        // need to repeate translate(...) even if it's already included in asbCenter mixin
        // because in a single declaration cannot be more than one transform
        // so scale() wouldn't work
        transform: translate(-50%, -50%) scale(.25);

        // for creating the animation of the popup going towards the user
        // add a little delay: allow the background to come in a little and then starts the content's animation
        transition: all .5s .2s;
    }

    // it's important that these two parts make roughly 100%
    // we want them side by side and having the same height
    // we don't apply float on both since the right side height would only be determined by its content
    // so we use display:table to make the behave like table cells and achieving our goal

    &__left {
        // the left part should be 1/3 of the container
        width: 33.333333%;
        // to behave like a table cell
        display: table-cell;
    }

    &__right {
        // the right part should be 2/3 of the container
        width: 66.6666667%;
        display: table-cell;
        // verical center the content
        // make this side have "technically" the same height of the other side
        vertical-align: middle;
        padding: 3rem 5rem;
    }

    &__img {
        display: block;
        width: 100%;
    }

    &__text {
        font-size: 1.4rem; // 14px
        margin-bottom: 4rem;

        // COLOMN LAYOUT

        // set number of columns
        -moz-column-count: 2;
        // set the gap between them
        -moz-column-gap: 4rem; // --> by default is 1em = 14px = the font-size of the current element
        // border between columns
        -moz-column-rule: .1rem solid $color-grey-dark-2;

        // set number of columns
        column-count: 2;
        // set the gap between them
        column-gap: 4rem; // --> by default is 1em = 14px = the font-size of the current element
        // border between columns
        column-rule: .1rem solid $color-grey-dark-2;

        // automatically figure out where to put hyphens (-) when text starts new line
        // it depends on document's language set in HTML e.g. <html lang="en">
        -moz-hyphens: auto;
        -ms-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto;

        // in reality we should not put prefixes manually, instead we should use tools such as Autoprefixer
    }

    // when popup becomes the target (#popup in the URL), make the it appear on the page 
    &:target {
        opacity: 1;
        visibility: visible;
    }

    // when the popup becomes the target, select its content
    &:target &__content {
        // make the popup content appear with the right size
        // for creating the animation of the popup going towards the user
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }

    &__close {

        &:link,
        &:visited {
            color: $color-grey-dark;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            // the close "icon" is just a text
            // by default its height is greater than the text itself
            // we need to reduce it for fixing the position issue
            line-height: 1;
        }

        &:hover {
            color: $color-primary;
        }

    }

}