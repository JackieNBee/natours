// How does clearfix actually work?
// it appends a pseudo element after the element
// which will clear the floats
@mixin clearfix {
    &::after {
        // we need to define a content otherwise it doesn't work
        content: "";
        // we use display: table because it's the standard version of clearfix
        display: table;
        // cleat both left and right
        // the property that actually performs the fix
        clear: both;
    }
}

// To make an element horizontally and vertically centered inside its container
@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
0px - 600px:        Phone --> max-width
600px - 900px:      Tablet portrait --> max-width
900px - 1200px:     Tablet landscape --> max-width
[1200px - 1800px] is where our normal styles apply
1800px+ :           Big desktop --> min-width
*/

// This is a "dumb" way of writing mixins for responsive design
// we rewrite this mixing for every brakpoint we plan
// @mixin respond-phone {

//     // instead of using parameter, we can pass entire piece of code using @content
//     @media (max-width: 600px) {
//         @content
//     }

//     ;
// }

// SMART way of writing mixins for responsive design
// one mixin for all the breakepoints
/*
$breakpoint argument choises:
- phone
- tab-port
- tab-land
- big-desktop
*/
// both em and rem are not affected by the custom root font-size we set
// it's better practice to use em in media queries 
// 1em = 16px
// to conver px to em we need to divide by 16
@mixin respond($breakpoint) {
    @if $breakpoint==phone {
        @media (max-width: 37.5rem) {
            // 600px
            @content
        }

        ;
    }

    @if $breakpoint==tab-port {
        @media (max-width: 56.25rem) {
            // 900px
            @content
        }

        ;
    }

    @if $breakpoint==tab-land {
        @media (max-width: 75rem) {
            // 1200px
            @content
        }

        ;
    }

    @if $breakpoint==big-desktop {
        @media (min-width: 112.5rem) {
            // 1800px
            @content
        }

        ;
    }
}