.form {

    // put some bottom space between form groups
    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }


    &__input {
        font-size: 1.5rem;
        // input element has a strange behaviour: it doesn't inherit font properties
        // so we have to put inherit manually
        font-family: inherit;
        color: inherit;
        // better to have more space on the sides
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        // none = 0
        border: none;
        // to fix next group being pushed down because of adding a bottom border
        border-bottom: 3px solid transparent;
        // to have long inputs
        width: 90%;
        // to put the label on a new line
        display: block;
        // add animation for displaying underline on :focus
        transition: all .3s;

        // focus state
        // when we click on the input
        &:focus {
            // by default it's like a blue border
            // we don't want it
            outline: none;
            // but an outline on :focus is important for accessibility when users use keyboards
            // so we add a custom one
            box-shadow: 0 1rem 2rem rgba($color: $color-black, $alpha: .1);
            // add a custom underline
            border-bottom: 3px solid $color-primary;

            // leverage the browser ability to know if an input is valit or not
            // when not valid, change the bottom border's color
            &:invalid {
                border-bottom: 3px solid $color-secondary-dark;
            }
        }

        // select and style input's placeholder
        &::-webkit-input-placeholder {
            color: $color-grey-dark-2;
        }

    }


    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        // to align it to the input's text above
        margin-left: 2rem;
        margin-top: .7rem;
        // in order to use box model properties e.g. to translate wouldn't work
        display: block;
        transition: all .3s;
    }

    // when the input's placeholder is visible, select the adjacent/immediately after sibling (label)
    // it works only when <label> is put after <input> in HTML otherwise it doesn't work
    // ~ is also used for selecting sibling but if it's not immediately after   
    &__input:placeholder-shown+&__label {
        // to make it transparent
        opacity: 0;
        // to remove it from the page but it still takes space
        // Why we have also to add opacity and not only use visibility? Because we cannot animate visibility
        // also with only opacity: 0, the user could still select the transparent text
        visibility: hidden;
        // to make the label move down animation when we start typing
        transform: translateY(-4rem);
    }

    // radio group = <input> + <label>
    &__radio-group {
        // to display them side by side instead of using float
        // with 50% it doesn't work
        width: 49%;
        // to display them side by side instead of using float
        display: inline-block;
    }

    &__radio-input {
        // hide the original input
        display: none;
    }

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;

        position: relative;
        // to make some space on the right for the custom radio otherwise the two will overlap each other
        padding-left: 4.5rem;
    }

    // custom radio button
    // it's made by two parts
    &__radio-button {
        // to make an "empty" cicle
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        // to make it use the properties defined above, we need to display it as a block element
        display: inline-block;

        // to position the custom radio button
        position: absolute;
        top: -.4rem;
        left: 0;


        // inner filled circle that appears when input is selected
        &::after {
            content: "";
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            // to position it at the center of the custom radio
            // position: absolute works even if the parent is using position: absolute
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            // to make it initially invisible
            opacity: 0;
            transition: opacity .2s;
        }
    }

    // as soon as the original radio is checked, check also the custom one
    // TRANSLATION: when orinal radio is checked, select the sibling radio-label and select its child's ::after
    // using ~ or + this time is irrelevant
    // .form__radio-input:checked ~ .form__radio-label .form__radio-button::after
    &__radio-input:checked~&__radio-label &__radio-button::after {
        opacity: 1;
    }

}