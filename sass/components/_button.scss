.btn {

    // need simple & for being able to select also <button> element
    // since it doesn't have :link and :visited
    &,
    /* normal and visited state of <a> element */
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        /* animations */
        transition: all .2s;
        /* for the absolut position of the ::after element */
        position: relative;
        /* to restore the button's font-size 16px = 1.6rem */
        font-size: $default-font-size;

        // Style when .btn is applied to a <button> element
        border: none;
        cursor: pointer;
    }

    &:hover {
        /* move up */
        transform: translateY(-.3rem);
        /* offsetX, offsetY, blur radius, color */
        box-shadow: 0 1rem 2rem rgba($color-black, .2);

        &::after {
            /* to have more control than normal scale() */
            transform: scaleX(1.4) scaleY(1.6);
            /* to make the element fade out */
            opacity: 0;
        }
    }

    /* How box-shadow works:

                offsetY
                    ^
                    |
        button - - - - - shadow
        |
        | -> offsetX
        |
        shadow

    */


    /* when clicked */
    // :active and :focus should have the same style
    // :focus is needed to remove the default blue outline of <button> elements
    &:active,
    &:focus {
        outline: none;
        /* push down the button a little bit */
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black, .2);
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;

        &::after {
            background-color: $color-primary;
        }
    }

    /* initial state of the ::after pseudo element */
    &::after {
        content: "";
        /* like the normal button */
        display: inline-block;
        /* pseudo element is treated like a child of the button */
        /* we want it to be the same */
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        /* to put it behind the parent element */
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        /* need to define transition in the initial state to affect also the other states */
        transition: all .4s;
    }

    &--animated {
        animation: moveInBottom .5s ease-out .75s;
        /* to apply animation's 0% state to the initial state */
        /* that's a fix because we're applying a deleay to the button */
        /* so at the beginning it's still visible */
        animation-fill-mode: backwards;
    }

}

.btn-text {

    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        // we can leave it in px because it's a really small unit and don't change a lot
        border-bottom: 1px solid $color-primary;
        padding: .8rem;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        // add some box-shadow
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        // move it a little bit up
        transform: translateY(-2px);
    }

    &:active {
        // reduce box-shadow
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
        // move it down back to the original spot
        transform: translateY(0);
    }
}